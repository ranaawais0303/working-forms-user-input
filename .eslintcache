[{"F:\\Skype session\\React_udemy\\working-forms-user-input\\src\\index.js":"1","F:\\Skype session\\React_udemy\\working-forms-user-input\\src\\App.js":"2","F:\\Skype session\\React_udemy\\working-forms-user-input\\src\\components\\SimpleInput.js":"3","F:\\Skype session\\React_udemy\\working-forms-user-input\\src\\hooks\\use-input.js":"4","F:\\Skype session\\React_udemy\\working-forms-user-input\\src\\components\\BasicForm.js":"5"},{"size":179,"mtime":1656679976863,"results":"6","hashOfConfig":"7"},{"size":244,"mtime":1656933575000,"results":"8","hashOfConfig":"7"},{"size":2196,"mtime":1656936570290,"results":"9","hashOfConfig":"7"},{"size":824,"mtime":1657001577246,"results":"10","hashOfConfig":"7"},{"size":2945,"mtime":1656939376260,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1glz22z",{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\Skype session\\React_udemy\\working-forms-user-input\\src\\index.js",[],"F:\\Skype session\\React_udemy\\working-forms-user-input\\src\\App.js",["24"],"F:\\Skype session\\React_udemy\\working-forms-user-input\\src\\components\\SimpleInput.js",["25"],"import React, { useState } from \"react\";\n\nimport useInput from \"../hooks/use-input\";\nconst SimpleInput = (props) => {\n  //for name\n  const {\n    value: enteredName,\n    isValid: enteredNameIsValid,\n    hasError: nameInputHasError,\n    valueChangeHandler: nameChangeHandler,\n    valueBlurHandler: nameBlurHandler,\n    reset: resetNameInput,\n  } = useInput((value) => value.trim() !== \"\");\n\n  //for Email\n  const {\n    value: enteredEmail,\n    isValid: enteredEmailIsValid,\n    hasError: emailInputHasError,\n    valueChangeHandler: emailChangeHandler,\n    valueBlurHandler: emailBlurHandler,\n    reset: resetEmailInput,\n  } = useInput((value) => value.includes(\"@\"));\n\n  let formIsValid = false;\n\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n  //form submit handler\n  const formSubmissionHandler = (e) => {\n    e.preventDefault();\n\n    if (!enteredNameIsValid) {\n      return;\n    }\n\n    resetNameInput();\n    resetEmailInput();\n  };\n\n  //set style according to conditions\n  const nameInputClasses = nameInputHasError\n    ? \"form-control invalid\"\n    : \"form-control\";\n  const emailInputClasses = emailInputHasError\n    ? \"form-control invalid\"\n    : \"form-control\";\n  //jsx code logics\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          onChange={nameChangeHandler}\n          onBlur={nameBlurHandler}\n          value={enteredName}\n        />\n        {nameInputHasError && (\n          <p className=\"error-text\">Name must not be Empty</p>\n        )}\n      </div>\n      <div className={emailInputClasses}>\n        <label htmlFor=\"email\">Your Email</label>\n        <input\n          type=\"email\"\n          id=\"email\"\n          onChange={emailChangeHandler}\n          onBlur={emailBlurHandler}\n          value={enteredEmail}\n        />\n        {emailInputHasError && (\n          <p className=\"error-text\">email must be valid </p>\n        )}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n",["26","27"],"F:\\Skype session\\React_udemy\\working-forms-user-input\\src\\hooks\\use-input.js",["28"],"F:\\Skype session\\React_udemy\\working-forms-user-input\\src\\components\\BasicForm.js",[],{"ruleId":"29","severity":1,"message":"30","line":1,"column":8,"nodeType":"31","messageId":"32","endLine":1,"endColumn":19},{"ruleId":"29","severity":1,"message":"33","line":1,"column":17,"nodeType":"31","messageId":"32","endLine":1,"endColumn":25},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"29","severity":1,"message":"38","line":1,"column":8,"nodeType":"31","messageId":"32","endLine":1,"endColumn":13},"no-unused-vars","'SimpleInput' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","no-native-reassign",["39"],"no-negated-in-lhs",["40"],"'React' is defined but never used.","no-global-assign","no-unsafe-negation"]